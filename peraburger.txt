-- MySQL Script generated by MySQL Workbench
-- Mon Jul 12 13:52:56 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema peradkco_peraburger
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema peradkco_peraburger
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `peradkco_peraburger` DEFAULT CHARACTER SET utf8 ;
USE `peradkco_peraburger` ;

-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`employee` (
  `id_employee` INT NOT NULL,
  `name_employee` VARCHAR(45) NOT NULL,
  `surname_employee` VARCHAR(45) NOT NULL,
  `active_employee` VARCHAR(45) NOT NULL,
  `image_employee` VARCHAR(45) NOT NULL,
  `datecreate_employee` VARCHAR(45) NOT NULL,
  `password_employee` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_employee`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`typeshipping`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`typeshipping` (
  `id_typeshipping` INT NOT NULL AUTO_INCREMENT,
  `name_typeshipping` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_typeshipping`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`domiciliary`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`domiciliary` (
  `id_domiciliary` VARCHAR(45) NOT NULL,
  `name_domiciliary` VARCHAR(45) NOT NULL,
  `surname_domiciliary` VARCHAR(45) NOT NULL,
  `datestart_domiciliary` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_domiciliary`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`domicilio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`domicilio` (
  `id_domicilio` VARCHAR(45) NOT NULL,
  `address_domicilio` VARCHAR(100) NOT NULL,
  `neighborhood_domicilio` VARCHAR(45) NOT NULL,
  `domiciliary_id_domiciliary` VARCHAR(45) NOT NULL,
  `price_domicilio` DOUBLE NOT NULL,
  `whatsapp_domicilio` VARCHAR(45) NOT NULL,
  `observation_domicilio` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_domicilio`),
  CONSTRAINT `fk_domicilio_domiciliary1`
    FOREIGN KEY (`domiciliary_id_domiciliary`)
    REFERENCES `peradkco_peraburger`.`domiciliary` (`id_domiciliary`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_domicilio_domiciliary1_idx` ON `peradkco_peraburger`.`domicilio` (`domiciliary_id_domiciliary` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`client` (
  `id_client` VARCHAR(45) NOT NULL,
  `name_client` VARCHAR(45) NOT NULL,
  `surname_client` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_client`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`state`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`state` (
  `id_state` INT NOT NULL AUTO_INCREMENT,
  `name_state` VARCHAR(45) NOT NULL,
  `order_state` INT NOT NULL,
  PRIMARY KEY (`id_state`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`order` (
  `id_order` VARCHAR(45) NOT NULL,
  `typeshipping_id_typeshipping` INT NOT NULL,
  `darlyturn_order` INT NOT NULL,
  `turnmachine_order` VARCHAR(45) NOT NULL,
  `observations_order` VARCHAR(500) NOT NULL,
  `date_order` VARCHAR(45) NOT NULL,
  `hour_order` VARCHAR(45) NOT NULL,
  `consecutive_order` VARCHAR(45) NOT NULL,
  `employee_id_employee` INT NOT NULL,
  `domicilio_id_domicilio` VARCHAR(45) NOT NULL,
  `client_id_client` VARCHAR(45) NOT NULL,
  `state_id_state` INT NOT NULL,
  PRIMARY KEY (`id_order`),
  CONSTRAINT `fk_order_employee1`
    FOREIGN KEY (`employee_id_employee`)
    REFERENCES `peradkco_peraburger`.`employee` (`id_employee`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_typeshipping1`
    FOREIGN KEY (`typeshipping_id_typeshipping`)
    REFERENCES `peradkco_peraburger`.`typeshipping` (`id_typeshipping`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_domicilio1`
    FOREIGN KEY (`domicilio_id_domicilio`)
    REFERENCES `peradkco_peraburger`.`domicilio` (`id_domicilio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_client1`
    FOREIGN KEY (`client_id_client`)
    REFERENCES `peradkco_peraburger`.`client` (`id_client`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_state1`
    FOREIGN KEY (`state_id_state`)
    REFERENCES `peradkco_peraburger`.`state` (`id_state`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_order_employee1_idx` ON `peradkco_peraburger`.`order` (`employee_id_employee` ASC) VISIBLE;

CREATE INDEX `fk_order_typeshipping1_idx` ON `peradkco_peraburger`.`order` (`typeshipping_id_typeshipping` ASC) VISIBLE;

CREATE INDEX `fk_order_domicilio1_idx` ON `peradkco_peraburger`.`order` (`domicilio_id_domicilio` ASC) VISIBLE;

CREATE INDEX `fk_order_client1_idx` ON `peradkco_peraburger`.`order` (`client_id_client` ASC) VISIBLE;

CREATE INDEX `fk_order_state1_idx` ON `peradkco_peraburger`.`order` (`state_id_state` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`category` (
  `id_category` INT NOT NULL AUTO_INCREMENT,
  `name_category` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_category`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`product` (
  `id_product` INT NOT NULL AUTO_INCREMENT,
  `name_product` VARCHAR(100) NOT NULL,
  `description_product` VARCHAR(300) NOT NULL,
  `price_product` DOUBLE NOT NULL,
  `category_id_category` INT NOT NULL,
  `image_product` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_product`),
  CONSTRAINT `fk_product_category1`
    FOREIGN KEY (`category_id_category`)
    REFERENCES `peradkco_peraburger`.`category` (`id_category`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_product_category1_idx` ON `peradkco_peraburger`.`product` (`category_id_category` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`ingredient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`ingredient` (
  `id_ingredient` INT NOT NULL AUTO_INCREMENT,
  `name_ingredient` VARCHAR(100) NOT NULL,
  `price_ingredient` DOUBLE NOT NULL,
  PRIMARY KEY (`id_ingredient`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`recipe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`recipe` (
  `id_recipe` INT NOT NULL AUTO_INCREMENT,
  `product_id_product` INT NOT NULL,
  `ingredient_id_ingredient` INT NOT NULL,
  PRIMARY KEY (`id_recipe`),
  CONSTRAINT `fk_recipe_product`
    FOREIGN KEY (`product_id_product`)
    REFERENCES `peradkco_peraburger`.`product` (`id_product`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_recipe_ingredient1`
    FOREIGN KEY (`ingredient_id_ingredient`)
    REFERENCES `peradkco_peraburger`.`ingredient` (`id_ingredient`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_recipe_product_idx` ON `peradkco_peraburger`.`recipe` (`product_id_product` ASC) VISIBLE;

CREATE INDEX `fk_recipe_ingredient1_idx` ON `peradkco_peraburger`.`recipe` (`ingredient_id_ingredient` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`Permission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`Permission` (
  `id_permission` INT NOT NULL AUTO_INCREMENT,
  `name_permission` VARCHAR(45) NOT NULL,
  `description_permission` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_permission`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`employee_has_Permission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`employee_has_Permission` (
  `employee_id_employee` INT NOT NULL,
  `Permission_id_permission` INT NOT NULL,
  `active_permission` INT NOT NULL,
  PRIMARY KEY (`employee_id_employee`, `Permission_id_permission`),
  CONSTRAINT `fk_employee_has_Permission_employee1`
    FOREIGN KEY (`employee_id_employee`)
    REFERENCES `peradkco_peraburger`.`employee` (`id_employee`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_employee_has_Permission_Permission1`
    FOREIGN KEY (`Permission_id_permission`)
    REFERENCES `peradkco_peraburger`.`Permission` (`id_permission`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_employee_has_Permission_Permission1_idx` ON `peradkco_peraburger`.`employee_has_Permission` (`Permission_id_permission` ASC) VISIBLE;

CREATE INDEX `fk_employee_has_Permission_employee1_idx` ON `peradkco_peraburger`.`employee_has_Permission` (`employee_id_employee` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`detailorder`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`detailorder` (
  `id_detailorder` INT NOT NULL AUTO_INCREMENT,
  `product_id_product` INT NOT NULL,
  `order_id_order` VARCHAR(45) NOT NULL,
  `quantity_detailorder` DOUBLE NOT NULL,
  `priceunit_detailorder` DOUBLE NOT NULL,
  PRIMARY KEY (`id_detailorder`),
  CONSTRAINT `fk_detailorder_product1`
    FOREIGN KEY (`product_id_product`)
    REFERENCES `peradkco_peraburger`.`product` (`id_product`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detailorder_order1`
    FOREIGN KEY (`order_id_order`)
    REFERENCES `peradkco_peraburger`.`order` (`id_order`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_detailorder_product1_idx` ON `peradkco_peraburger`.`detailorder` (`product_id_product` ASC) VISIBLE;

CREATE INDEX `fk_detailorder_order1_idx` ON `peradkco_peraburger`.`detailorder` (`order_id_order` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`detailorder_hasnot_recipe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`detailorder_hasnot_recipe` (
  `detailorder_id_detailorder` INT NOT NULL,
  `recipe_id_recipe` INT NOT NULL,
  `discount_hasnot` DOUBLE NOT NULL,
  PRIMARY KEY (`detailorder_id_detailorder`, `recipe_id_recipe`),
  CONSTRAINT `fk_detailorder_has_recipe_detailorder1`
    FOREIGN KEY (`detailorder_id_detailorder`)
    REFERENCES `peradkco_peraburger`.`detailorder` (`id_detailorder`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detailorder_has_recipe_recipe1`
    FOREIGN KEY (`recipe_id_recipe`)
    REFERENCES `peradkco_peraburger`.`recipe` (`id_recipe`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_detailorder_has_recipe_recipe1_idx` ON `peradkco_peraburger`.`detailorder_hasnot_recipe` (`recipe_id_recipe` ASC) VISIBLE;

CREATE INDEX `fk_detailorder_has_recipe_detailorder1_idx` ON `peradkco_peraburger`.`detailorder_hasnot_recipe` (`detailorder_id_detailorder` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`infostates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`infostates` (
  `id_infostates` INT NOT NULL AUTO_INCREMENT,
  `state_id_state` INT NOT NULL,
  `order_id_order` VARCHAR(45) NOT NULL,
  `dateupdate_infostate` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_infostates`),
  CONSTRAINT `fk_infostates_state1`
    FOREIGN KEY (`state_id_state`)
    REFERENCES `peradkco_peraburger`.`state` (`id_state`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_infostates_order1`
    FOREIGN KEY (`order_id_order`)
    REFERENCES `peradkco_peraburger`.`order` (`id_order`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_infostates_state1_idx` ON `peradkco_peraburger`.`infostates` (`state_id_state` ASC) VISIBLE;

CREATE INDEX `fk_infostates_order1_idx` ON `peradkco_peraburger`.`infostates` (`order_id_order` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`addition`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`addition` (
  `id_addition` INT NOT NULL AUTO_INCREMENT,
  `name_addition` VARCHAR(45) NOT NULL,
  `price_addition` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_addition`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`product_additions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`product_additions` (
  `id_product_additions` INT NOT NULL AUTO_INCREMENT,
  `addition_id_addition` INT NOT NULL,
  `product_id_product` INT NOT NULL,
  PRIMARY KEY (`id_product_additions`),
  CONSTRAINT `fk_product_additions_addition1`
    FOREIGN KEY (`addition_id_addition`)
    REFERENCES `peradkco_peraburger`.`addition` (`id_addition`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_additions_product1`
    FOREIGN KEY (`product_id_product`)
    REFERENCES `peradkco_peraburger`.`product` (`id_product`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_product_additions_addition1_idx` ON `peradkco_peraburger`.`product_additions` (`addition_id_addition` ASC) VISIBLE;

CREATE INDEX `fk_product_additions_product1_idx` ON `peradkco_peraburger`.`product_additions` (`product_id_product` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`detailorder_has_product_additions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`detailorder_has_product_additions` (
  `detailorder_id_detailorder` INT NOT NULL,
  `product_additions_id_product_additions` INT NOT NULL,
  `price_more_additions` DOUBLE NOT NULL,
  PRIMARY KEY (`detailorder_id_detailorder`, `product_additions_id_product_additions`),
  CONSTRAINT `fk_detailorder_has_product_additions_detailorder1`
    FOREIGN KEY (`detailorder_id_detailorder`)
    REFERENCES `peradkco_peraburger`.`detailorder` (`id_detailorder`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detailorder_has_product_additions_product_additions1`
    FOREIGN KEY (`product_additions_id_product_additions`)
    REFERENCES `peradkco_peraburger`.`product_additions` (`id_product_additions`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_detailorder_has_product_additions_product_additions1_idx` ON `peradkco_peraburger`.`detailorder_has_product_additions` (`product_additions_id_product_additions` ASC) VISIBLE;

CREATE INDEX `fk_detailorder_has_product_additions_detailorder1_idx` ON `peradkco_peraburger`.`detailorder_has_product_additions` (`detailorder_id_detailorder` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `peradkco_peraburger`.`print`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `peradkco_peraburger`.`print` (
  `id_print` INT NOT NULL AUTO_INCREMENT,
  `order_id_order` VARCHAR(45) NOT NULL,
  `hour_print` VARCHAR(45) NOT NULL,
  `print_by_id_empoyee` INT NOT NULL,
  PRIMARY KEY (`id_print`),
  CONSTRAINT `fk_print_order1`
    FOREIGN KEY (`order_id_order`)
    REFERENCES `peradkco_peraburger`.`order` (`id_order`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_print_employee1`
    FOREIGN KEY (`print_by_id_empoyee`)
    REFERENCES `peradkco_peraburger`.`employee` (`id_employee`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_print_order1_idx` ON `peradkco_peraburger`.`print` (`order_id_order` ASC) VISIBLE;

CREATE INDEX `fk_print_employee1_idx` ON `peradkco_peraburger`.`print` (`print_by_id_empoyee` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `peradkco_peraburger`.`employee`
-- -----------------------------------------------------
START TRANSACTION;
USE `peradkco_peraburger`;
INSERT INTO `peradkco_peraburger`.`employee` (`id_employee`, `name_employee`, `surname_employee`, `active_employee`, `image_employee`, `datecreate_employee`, `password_employee`) VALUES (1098823092, 'Fabian Enrique', 'Suarez Carvajal', '1', 'sin-image.jpg', '2021-06-02 00:00:00', '960c7080aaf814c9f6f198c0aaf04319');

COMMIT;


-- -----------------------------------------------------
-- Data for table `peradkco_peraburger`.`typeshipping`
-- -----------------------------------------------------
START TRANSACTION;
USE `peradkco_peraburger`;
INSERT INTO `peradkco_peraburger`.`typeshipping` (`id_typeshipping`, `name_typeshipping`) VALUES (1, 'DOMICILIO');
INSERT INTO `peradkco_peraburger`.`typeshipping` (`id_typeshipping`, `name_typeshipping`) VALUES (2, 'LOCAL');

COMMIT;


-- -----------------------------------------------------
-- Data for table `peradkco_peraburger`.`domiciliary`
-- -----------------------------------------------------
START TRANSACTION;
USE `peradkco_peraburger`;
INSERT INTO `peradkco_peraburger`.`domiciliary` (`id_domiciliary`, `name_domiciliary`, `surname_domiciliary`, `datestart_domiciliary`) VALUES ('1', 'NO IDENTIFICADO', DEFAULT, DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `peradkco_peraburger`.`domicilio`
-- -----------------------------------------------------
START TRANSACTION;
USE `peradkco_peraburger`;
INSERT INTO `peradkco_peraburger`.`domicilio` (`id_domicilio`, `address_domicilio`, `neighborhood_domicilio`, `domiciliary_id_domiciliary`, `price_domicilio`, `whatsapp_domicilio`, `observation_domicilio`) VALUES ('1', 'LOCAL', 'LOCAL', '1', 0, DEFAULT, DEFAULT);
INSERT INTO `peradkco_peraburger`.`domicilio` (`id_domicilio`, `address_domicilio`, `neighborhood_domicilio`, `domiciliary_id_domiciliary`, `price_domicilio`, `whatsapp_domicilio`, `observation_domicilio`) VALUES ('2', 'DOMICILIO SIN DIRECCION', 'DOMICILIO SIN DIRECCION', '1', 0, DEFAULT, DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `peradkco_peraburger`.`client`
-- -----------------------------------------------------
START TRANSACTION;
USE `peradkco_peraburger`;
INSERT INTO `peradkco_peraburger`.`client` (`id_client`, `name_client`, `surname_client`) VALUES ('1', 'VARIOS', DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `peradkco_peraburger`.`state`
-- -----------------------------------------------------
START TRANSACTION;
USE `peradkco_peraburger`;
INSERT INTO `peradkco_peraburger`.`state` (`id_state`, `name_state`, `order_state`) VALUES (1, 'CREADO', 1);
INSERT INTO `peradkco_peraburger`.`state` (`id_state`, `name_state`, `order_state`) VALUES (2, 'EN COCINA', 2);
INSERT INTO `peradkco_peraburger`.`state` (`id_state`, `name_state`, `order_state`) VALUES (3, 'DESPACHADO', 3);
INSERT INTO `peradkco_peraburger`.`state` (`id_state`, `name_state`, `order_state`) VALUES (4, 'DESHABILITADO', 4);

COMMIT;


-- -----------------------------------------------------
-- Data for table `peradkco_peraburger`.`category`
-- -----------------------------------------------------
START TRANSACTION;
USE `peradkco_peraburger`;
INSERT INTO `peradkco_peraburger`.`category` (`id_category`, `name_category`) VALUES (1, 'COMBOS');
INSERT INTO `peradkco_peraburger`.`category` (`id_category`, `name_category`) VALUES (2, 'HELADOS');
INSERT INTO `peradkco_peraburger`.`category` (`id_category`, `name_category`) VALUES (3, 'BEBIDAS');
INSERT INTO `peradkco_peraburger`.`category` (`id_category`, `name_category`) VALUES (4, 'ADICIONES');

COMMIT;


-- -----------------------------------------------------
-- Data for table `peradkco_peraburger`.`product`
-- -----------------------------------------------------
START TRANSACTION;
USE `peradkco_peraburger`;
INSERT INTO `peradkco_peraburger`.`product` (`id_product`, `name_product`, `description_product`, `price_product`, `category_id_category`, `image_product`) VALUES (1, 'Combo PeRa Burger', 'Sencilla + papitas', 13000, 1, '1.jpg');
INSERT INTO `peradkco_peraburger`.`product` (`id_product`, `name_product`, `description_product`, `price_product`, `category_id_category`, `image_product`) VALUES (2, 'Combo PeRa Amor', 'Sencilla con Tocineta + papitas', 15000, 1, '2.jpg');
INSERT INTO `peradkco_peraburger`.`product` (`id_product`, `name_product`, `description_product`, `price_product`, `category_id_category`, `image_product`) VALUES (3, 'Combo PeRa Felicidad', 'Doble Carne + papitas', 17000, 1, '3.jpg');
INSERT INTO `peradkco_peraburger`.`product` (`id_product`, `name_product`, `description_product`, `price_product`, `category_id_category`, `image_product`) VALUES (4, 'Combo Brutos pero Decididos', 'Doble Carne, Doble Queso y Tocineta + papitas', 20000, 1, '4.jpg');
INSERT INTO `peradkco_peraburger`.`product` (`id_product`, `name_product`, `description_product`, `price_product`, `category_id_category`, `image_product`) VALUES (5, 'Combo PeRa Locura', 'Papitas +  Helado', 10000, 1, '5.jpg');
INSERT INTO `peradkco_peraburger`.`product` (`id_product`, `name_product`, `description_product`, `price_product`, `category_id_category`, `image_product`) VALUES (6, 'PeRa Barquilla', 'Helado en cono', 4000, 2, '6.jpg');
INSERT INTO `peradkco_peraburger`.`product` (`id_product`, `name_product`, `description_product`, `price_product`, `category_id_category`, `image_product`) VALUES (7, 'PeRa Canastilla', 'Helado en canastilla', 5000, 2, '7.jpg');
INSERT INTO `peradkco_peraburger`.`product` (`id_product`, `name_product`, `description_product`, `price_product`, `category_id_category`, `image_product`) VALUES (8, 'Cocacola 400ml', 'Gaseosa', 2000, 3, '8.jpg');
INSERT INTO `peradkco_peraburger`.`product` (`id_product`, `name_product`, `description_product`, `price_product`, `category_id_category`, `image_product`) VALUES (9, 'Porsion de Patitas', 'Porsión de papitas', 4000, 4, '9.jpg');

COMMIT;


-- -----------------------------------------------------
-- Data for table `peradkco_peraburger`.`ingredient`
-- -----------------------------------------------------
START TRANSACTION;
USE `peradkco_peraburger`;
INSERT INTO `peradkco_peraburger`.`ingredient` (`id_ingredient`, `name_ingredient`, `price_ingredient`) VALUES (1, 'Cebolla', 0);
INSERT INTO `peradkco_peraburger`.`ingredient` (`id_ingredient`, `name_ingredient`, `price_ingredient`) VALUES (2, 'Tomate', 0);
INSERT INTO `peradkco_peraburger`.`ingredient` (`id_ingredient`, `name_ingredient`, `price_ingredient`) VALUES (3, 'Lechuga', 0);

COMMIT;


-- -----------------------------------------------------
-- Data for table `peradkco_peraburger`.`recipe`
-- -----------------------------------------------------
START TRANSACTION;
USE `peradkco_peraburger`;
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 1, 1);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 1, 2);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 1, 3);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 2, 1);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 2, 2);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 2, 3);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 3, 1);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 3, 2);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 3, 3);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 4, 1);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 4, 2);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 4, 3);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 9, 1);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 9, 2);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 9, 3);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 10, 1);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 10, 2);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 10, 3);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 11, 1);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 11, 2);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 11, 3);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 12, 1);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 12, 2);
INSERT INTO `peradkco_peraburger`.`recipe` (`id_recipe`, `product_id_product`, `ingredient_id_ingredient`) VALUES (DEFAULT, 12, 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `peradkco_peraburger`.`Permission`
-- -----------------------------------------------------
START TRANSACTION;
USE `peradkco_peraburger`;
INSERT INTO `peradkco_peraburger`.`Permission` (`id_permission`, `name_permission`, `description_permission`) VALUES (1, 'Iniciar Sesion', 'Este permiso permite ingresar a los empleados ingresar al sistema');

COMMIT;


-- -----------------------------------------------------
-- Data for table `peradkco_peraburger`.`employee_has_Permission`
-- -----------------------------------------------------
START TRANSACTION;
USE `peradkco_peraburger`;
INSERT INTO `peradkco_peraburger`.`employee_has_Permission` (`employee_id_employee`, `Permission_id_permission`, `active_permission`) VALUES (1098823092, 1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `peradkco_peraburger`.`addition`
-- -----------------------------------------------------
START TRANSACTION;
USE `peradkco_peraburger`;
INSERT INTO `peradkco_peraburger`.`addition` (`id_addition`, `name_addition`, `price_addition`) VALUES (1, 'Tocineta', '3000');
INSERT INTO `peradkco_peraburger`.`addition` (`id_addition`, `name_addition`, `price_addition`) VALUES (2, 'Queso', '3000');

COMMIT;


-- -----------------------------------------------------
-- Data for table `peradkco_peraburger`.`product_additions`
-- -----------------------------------------------------
START TRANSACTION;
USE `peradkco_peraburger`;
INSERT INTO `peradkco_peraburger`.`product_additions` (`id_product_additions`, `addition_id_addition`, `product_id_product`) VALUES (DEFAULT, 1, 1);
INSERT INTO `peradkco_peraburger`.`product_additions` (`id_product_additions`, `addition_id_addition`, `product_id_product`) VALUES (DEFAULT, 2, 1);
INSERT INTO `peradkco_peraburger`.`product_additions` (`id_product_additions`, `addition_id_addition`, `product_id_product`) VALUES (DEFAULT, 1, 2);
INSERT INTO `peradkco_peraburger`.`product_additions` (`id_product_additions`, `addition_id_addition`, `product_id_product`) VALUES (DEFAULT, 2, 2);
INSERT INTO `peradkco_peraburger`.`product_additions` (`id_product_additions`, `addition_id_addition`, `product_id_product`) VALUES (DEFAULT, 1, 3);
INSERT INTO `peradkco_peraburger`.`product_additions` (`id_product_additions`, `addition_id_addition`, `product_id_product`) VALUES (DEFAULT, 2, 3);
INSERT INTO `peradkco_peraburger`.`product_additions` (`id_product_additions`, `addition_id_addition`, `product_id_product`) VALUES (DEFAULT, 1, 4);
INSERT INTO `peradkco_peraburger`.`product_additions` (`id_product_additions`, `addition_id_addition`, `product_id_product`) VALUES (DEFAULT, 2, 4);
INSERT INTO `peradkco_peraburger`.`product_additions` (`id_product_additions`, `addition_id_addition`, `product_id_product`) VALUES (DEFAULT, 1, 9);
INSERT INTO `peradkco_peraburger`.`product_additions` (`id_product_additions`, `addition_id_addition`, `product_id_product`) VALUES (DEFAULT, 2, 9);
INSERT INTO `peradkco_peraburger`.`product_additions` (`id_product_additions`, `addition_id_addition`, `product_id_product`) VALUES (DEFAULT, 1, 10);
INSERT INTO `peradkco_peraburger`.`product_additions` (`id_product_additions`, `addition_id_addition`, `product_id_product`) VALUES (DEFAULT, 2, 10);
INSERT INTO `peradkco_peraburger`.`product_additions` (`id_product_additions`, `addition_id_addition`, `product_id_product`) VALUES (DEFAULT, 1, 11);
INSERT INTO `peradkco_peraburger`.`product_additions` (`id_product_additions`, `addition_id_addition`, `product_id_product`) VALUES (DEFAULT, 2, 11);
INSERT INTO `peradkco_peraburger`.`product_additions` (`id_product_additions`, `addition_id_addition`, `product_id_product`) VALUES (DEFAULT, 1, 12);
INSERT INTO `peradkco_peraburger`.`product_additions` (`id_product_additions`, `addition_id_addition`, `product_id_product`) VALUES (DEFAULT, 2, 12);

COMMIT;

